#!/bin/bash

# Check if the script is run as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit
fi

# Check for OS type
if [ -f /etc/os-release ]; then
  . /etc/os-release
  OS=$ID
  VERSION=$VERSION_ID
  ARCH=$(uname -m)
else
  echo "Cannot determine the operating system."
  exit 1
fi

# Function to install Zabbix Agent on Debian/Ubuntu and arm64 versions
install_zabbix_debian_ubuntu() {
  echo "Installing Zabbix Agent on $OS $VERSION (arch: $ARCH)..."

  # Determine the correct Zabbix release for Debian/Ubuntu and arm64
  if [[ "$ARCH" == "aarch64" || "$ARCH" == "arm64" ]]; then
    wget https://repo.zabbix.com/zabbix/6.0/$OS/pool/main/z/zabbix-release/zabbix-release_6.0-2+$OS$(lsb_release -rs)_arm64.deb
    dpkg -i zabbix-release_6.0-2+$OS$(lsb_release -rs)_arm64.deb
  else
    wget https://repo.zabbix.com/zabbix/6.0/$OS/pool/main/z/zabbix-release/zabbix-release_6.0-2+$OS$(lsb_release -rs)_all.deb
    dpkg -i zabbix-release_6.0-2+$OS$(lsb_release -rs)_all.deb
  fi

  # Install Zabbix agent
  apt update
  apt install -y zabbix-agent
  systemctl enable zabbix-agent
  systemctl start zabbix-agent
}

# Function to install Zabbix Agent on RHEL-based systems (including AlmaLinux, Rocky, Oracle, CentOS)
install_zabbix_rhel_based() {
  echo "Installing Zabbix Agent on $OS $VERSION (arch: $ARCH)..."

  # Add Zabbix repository for RHEL-based distributions
  rpm -Uvh https://repo.zabbix.com/zabbix/6.0/rhel/${VERSION%%.*}/x86_64/zabbix-release-6.0-2.el${VERSION%%.*}.noarch.rpm

  # Install Zabbix agent
  yum install -y zabbix-agent
  systemctl enable zabbix-agent
  systemctl start zabbix-agent
}

# Function to install Zabbix Agent on Amazon Linux
install_zabbix_amazon_linux() {
  echo "Installing Zabbix Agent on Amazon Linux $VERSION..."

  # Add Zabbix repository for Amazon Linux
  rpm -Uvh https://repo.zabbix.com/zabbix/6.0/rhel/7/x86_64/zabbix-release-6.0-2.el7.noarch.rpm

  # Install Zabbix agent
  yum install -y zabbix-agent
  systemctl enable zabbix-agent
  systemctl start zabbix-agent
}

# Function to install Zabbix Agent on SUSE-based systems (OpenSUSE, SUSE Linux Enterprise Server)
install_zabbix_suse() {
  echo "Installing Zabbix Agent on SUSE $VERSION..."

  # Add Zabbix repository for SUSE
  rpm -Uvh https://repo.zabbix.com/zabbix/6.0/sles/${VERSION%%.*}/x86_64/zabbix-release-6.0-2.sles${VERSION%%.*}.noarch.rpm

  # Install Zabbix agent
  zypper install -y zabbix-agent
  systemctl enable zabbix-agent
  systemctl start zabbix-agent
}

# Function to install Zabbix Agent on Raspberry Pi OS
install_zabbix_raspberry_pi() {
  echo "Installing Zabbix Agent on Raspberry Pi OS (arch: $ARCH)..."

  # Add Zabbix repository for Raspberry Pi OS
  wget https://repo.zabbix.com/zabbix/6.0/raspbian/pool/main/z/zabbix-release/zabbix-release_6.0-2+raspbian$(lsb_release -rs)_armhf.deb
  dpkg -i zabbix-release_6.0-2+raspbian$(lsb_release -rs)_armhf.deb

  # Install Zabbix agent
  apt update
  apt install -y zabbix-agent
  systemctl enable zabbix-agent
  systemctl start zabbix-agent
}

# Main logic to check OS and call the appropriate function
case "$OS" in
  ubuntu | debian)
    install_zabbix_debian_ubuntu
    ;;
  almalinux | rocky | oracle | centos | rhel)
    install_zabbix_rhel_based
    ;;
  amzn)
    install_zabbix_amazon_linux
    ;;
  opensuse-leap | sles)
    install_zabbix_suse
    ;;
  raspbian)
    install_zabbix_raspberry_pi
    ;;
  *)
    echo "Unsupported OS: $OS $VERSION. Please refer to the Zabbix documentation for manual installation."
    exit 1
    ;;
esac

# Modify zabbix_agentd.conf

# Check if the string exists and replace if found, otherwise insert it
if grep -q "Hostname=Zabbix server" /*/*/zabbix_agentd.conf; then
  perl -pi -e "s/Hostname=Zabbix server/# confighostname/g" /*/*/zabbix_agentd.conf
else
  echo "# confighostname" >> /*/*/zabbix_agentd.conf
  echo "Hostname=XXXXX" >> /*/*/zabbix_agentd.conf
fi

# Check if Hostname line exists, if not, insert it
if ! grep -q "^Hostname=" /*/*/zabbix_agentd.conf; then
  echo "Hostname=XXXXX" >> /*/*/zabbix_agentd.conf
else
  perl -pi -e "s/# Hostname=/Hostname=XXXXX/g" /*/*/zabbix_agentd.conf
fi

# Edit Timeout setting
perl -pi -e "s/# Timeout=3/Timeout=30/g" /*/*/zabbix_agentd.conf

# Ask for system type and modify ServerActive setting based on user input
read -p "Is the system VMware or AHV? " system_type
sleep 3

# Check user input and update ServerActive setting in zabbix_agentd.conf
if [[ "$system_type" == "AHV" ]]; then
    perl -pi -e "s/ServerActive=127.0.0.1/ServerActive=203.154.185.152/g" /*/*/zabbix_agentd.conf
    echo "ServerActive changed to 203.154.185.152 for AHV."
elif [[ "$system_type" == "VMware" ]]; then
    perl -pi -e "s/ServerActive=127.0.0.1/ServerActive=203.154.185.69/g" /*/*/zabbix_agentd.conf
    echo "ServerActive changed to 203.154.185.69 for VMware."
else
    echo "Unknown system type. No changes made."
fi
